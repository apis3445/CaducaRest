# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  system.debug: true

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '3.1.102'
- task: UseDotNet@2 
  displayName: ".NET Core 3.1.x"
  inputs:
        version: '3.1.2'
        packageType: sdk
- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: "Test"
  inputs:
        command: test
        projects: '**/*tests/*.csproj'
        arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: "Publish"
  inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '-r linux-x64 --configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: true

- task: PublishBuildArtifacts@1
  displayName: "Upload Artifacts"
  inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
        artifactName: 'hanselminutes' 

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  displayName: Build Solution
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  displayName: Testing Unit Test
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: |
      **\xUnit.CaducaRest.dll
      !**\*TestAdapter.dll
      !**\obj\**
    searchFolder: '$(System.DefaultWorkingDirectory)'

- task: DotNetCoreCLI@2
  inputs:
    command: test
    projects: '**/*Tests/*.csproj'
    arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'

- task: VSTest@2
  displayName: Testing Integration Test
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: |
      **\CaducaRest.IntegrationTest.dll
      !**\*TestAdapter.dll
      !**\obj\**
    searchFolder: '$(System.DefaultWorkingDirectory)'

- task: DotNetCoreCLI@2
  inputs:
    command: publish
    publishWebProjects: true
    arguments: '-r linux-x64 --configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'caduca'

- task: AzureWebApp@1
  inputs:
    azureSubscription: 'Pago por uso (d5562316-f06d-4994-abeb-0a0562a8e639)'
    appType: 'webAppLinux'
    appName: 'caducarest'
    package: '$(Build.ArtifactStagingDirectory)/**/*.zip'
    deploymentMethod: runFromPackage
    runtimeStack: 'DOTNETCORE|Latest'
- task: CmdLine@2
  displayName: Install Newman
  inputs:
    script: 'npm install -g newman'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
- task: CmdLine@2
  displayName: Run API Tests
  inputs:
    script: |
        cd postman
        test.bat

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '$(System.DefaultWorkingDirectory)\postman\junitReport.xml'
- task: VSTest@2
  displayName: Testing Selenium
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: |
      **\CaducaRest.UITest.dll
      !**\*TestAdapter.dll
      !**\obj\**
    searchFolder: '$(System.DefaultWorkingDirectory)'
